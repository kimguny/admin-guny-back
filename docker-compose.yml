version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web

  fastapi:
    build: .
    container_name: admin-guny-back
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - web

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    depends_on:
      - fastapi
      - certbot
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/letsencrypt:rw
      - ./nginx/www:/var/www/certbot:rw
    networks:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    env_file:
      - .env
    volumes:
      - ./nginx/ssl:/etc/letsencrypt:rw
      - ./nginx/www:/var/www/certbot:rw
    entrypoint: >
      /bin/sh -c '
      if [ ! -d "/etc/letsencrypt/live/admin.gunynote.com" ]; then
        certbot certonly --webroot -w /var/www/certbot -d admin.gunynote.com --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal;
        docker restart nginx_proxy;
      fi;
      while :; do certbot renew; sleep 12h & wait $${!}; done'
    networks:
      - web

networks:
  web:

volumes:
  pgdata:
